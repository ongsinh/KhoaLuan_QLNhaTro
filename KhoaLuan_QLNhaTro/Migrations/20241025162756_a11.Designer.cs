// <auto-generated />
using System;
using KhoaLuan_QLNhaTro.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KhoaLuan_QLNhaTro.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241025162756_a11")]
    partial class a11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idAccount");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idRole")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idRole");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idAsset");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.AssetRoom", b =>
                {
                    b.Property<Guid>("idRoom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idAsset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("idRoom", "idAsset");

                    b.HasIndex("idAsset");

                    b.ToTable("AssetRooms");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Bill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idBill");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idRoom")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idAccount");

                    b.HasIndex("idRoom");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Contract", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idContract");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idRoom")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idAccount");

                    b.HasIndex("idRoom");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.DetailBill", b =>
                {
                    b.Property<string>("idBill")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("idService")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("idBill", "idService");

                    b.HasIndex("idService");

                    b.ToTable("DetailBills");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.DetailContract", b =>
                {
                    b.Property<string>("idContract")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("idService")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idAsset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("idContract", "idService", "idAsset");

                    b.HasIndex("idAsset");

                    b.HasIndex("idService");

                    b.ToTable("DetailContracts");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idHouse");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("floorNumber")
                        .HasColumnType("int");

                    b.Property<int>("roomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idIncident");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idAccount")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idAccount");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRole");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRoom");

                    b.Property<float>("Acreage")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idHouse")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idAccount");

                    b.HasIndex("idHouse");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.RoomService", b =>
                {
                    b.Property<Guid>("idRoom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idService")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("idRoom", "idService");

                    b.HasIndex("idService");

                    b.ToTable("RoomServices");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idService");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Account", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.AssetRoom", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("idAsset")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Bill", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("idAccount")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Room", "Room")
                        .WithMany("Bills")
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Contract", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("idAccount")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Room", "Room")
                        .WithMany("Contracts")
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.DetailBill", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("idBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("idService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.DetailContract", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("idAsset")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("idContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("idService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Contract");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Incident", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("idAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Room", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("idAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("idHouse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("House");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.RoomService", b =>
                {
                    b.HasOne("KhoaLuan_QLNhaTro.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhoaLuan_QLNhaTro.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("idService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("KhoaLuan_QLNhaTro.Models.Room", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
